---
### Задачи на отработку

### Задачи

3. Напишите программу, которая из строки, содержащей текст и цифры (например, "Привет123мир456"), извлекает все числа и возвращает массив чисел [123, 456].
---

_Средний уровень_

### 4. Задача. Работа с массивами

Создайте массив чисел.

1. Измените второй элемент массива на новое число.
2. Используйте метод `push` для добавления нового элемента в конец массива.
3. Пройдитесь циклом по массиву и выполните инкремент каждого элемента (например, увеличьте значение на 1).
4. Выведите итоговый массив в консоль.

Используйте цикл `for`.

---

### Задача 5. Разреженные массивы и оператор `delete`

Создайте массив из 5 элементов.

1. Удалите третий элемент массива с помощью оператора `delete`.
2. Пройдитесь циклом по массиву (например, используя метод `forEach` или `for...of`) и выведите в консоль каждый элемент, объяснив, почему некоторые элементы могут быть пропущены.

### Задача 6. Работа с объектами: изменение, добавление и вычисляемые свойства

1. Создайте объект, содержащий свойства: `name`, `age` и `city`.
2. Измените значение свойства `city`.
3. Добавьте новое свойство, используя вычисляемое имя (например, ключ берётся из переменной).
4. Выведите массив ключей объекта с помощью `Object.keys()` и его длину.

_Подсказка:_  
Запишите вычисляемое свойство так:

```javascript
let propName = "country";
object[propName] = "Россия";
```

### Задача 7. Область видимости переменных в условных конструкциях

**Описание:**  
Напишите код, который:

1. Объявляет переменную с помощью `let` внутри блока `if` и пытается обратиться к ней вне этого блока.
2. Объявляет переменную с помощью `var` в том же блоке и затем выводит её значение за пределами блока.
3. Прокомментируйте, почему переменная, объявленная через `let`, недоступна вне блока, а переменная через `var` доступна.

_Подсказка:_  
Запишите два блока кода и используйте комментарии для объяснения поведения.

---

## Сложный уровень

### Задача 6. Расширенная работа с разреженными массивами

**Описание:**

1. Создайте массив с элементами на позициях 0, 2, 4 (оставив «дырки» на нечетных индексах).
2. Используйте оператор `delete` для удаления элемента на позиции 2.
3. Выведите исходный и итоговый массивы в консоль.

---

Все задачи нужно выполнять в отдельных файлах `task_n.js`, где `n` — номер части учебника. Не забывайте подключать файлы в `index.html`.

---

### Задачи на отработку

### **Средние задачи**

4. ** Перебор массива циклом for-of**  
   Дан массив чисел:

   ```js
   let numbers = [12, 45, 78, 23, 56, 89, 34];
   ```

   - Добавьте условие: если число больше 50, добавьте к нему `10` и выведите его с новым значением.

5. **Перебор объекта циклом for-in**  
   Дан объект:

   ```js
   let student = {
   	name: "Андрей",
   	age: 21,
   	course: 3,
   	passed: true,
   };
   ```

   - Переберите объект циклом `for-in` и выведите в консоль все его свойства в формате: `"ключ: значение"`.
   - Добавьте проверку: если значение `true` или `false`, замените его на `"Да"` или `"Нет"`.

6. **Цикл while**

   - Выведите в консоль все чётные числа от `10` до `50`, используя `while`.

7. **Цикл for**

   - С помощью цикла `for` создайте массив чисел от `1` до `20`.
   - Выведите массив в консоль, только чётные числа.

8. **Цикл for для массивов**  
   Дан массив:

   ```js
   let arr = [3, 7, 1, 12, 9, 4, 6];
   ```

   - Пройдитесь по массиву циклом `for`.
   - Если число больше `5`, удвойте его и замените в массиве.

9. **Условия в циклах**

   - Выведите в консоль все числа от `1` до `30`, но если число делится на `3` без остатка, замените его на `"Fizz"`.

10. **Накопление чисел в циклах**

- Считайте сумму всех нечётных чисел от `1` до `50`, используя `for`.

---

### **Сложные задачи**

11. **Инструкция break**

- Выведите в консоль все числа от `1` до `100`, но если встретите число `42`, остановите цикл (`break`).

12. **Инструкция continue**

- Выведите все числа от `1` до `30`, пропуская числа, которые делятся на `4`. Используйте `continue`.

13. **Область видимости в циклах**

- Объявите переменную `let count = 0`.
- Напишите цикл `for`, который увеличивает `count` на `1` каждый раз, когда `i` делится на `5`.
- Выведите `count` **внутри** и **после** цикла.
- Объясните, почему значение `count` доступно после завершения цикла.

---

Все задачи нужно выполнять в отдельных файлах `task_n.js`, где `n` — номер части учебника. Не забывайте подключать файлы в `index.html`.

---

Напишите, какие недостатки у следующего кода, и исправьте их:
function sum(arr) {
let res = 0;
for (let elem of arr) {
res += elem;
}
return res / arr.length;
}

---

Напишите, какие недостатки у следующего кода, и исправьте их:
function func(arr1, arr2) {
let res1 = 0;
for (let elem of arr) {
res1 += elem;
}
let res2 = 0;
for (let elem of arr) {
res2 += elem;
}
return res1 / res2;
}

---

Сделайте функцию, которая параметром будет принимать массив и возвращать сумму его элементов.

---

№2⊗jsPmFBPrm

Сделайте функцию, которая параметром будет принимать число и возвращать массив его делителей.

№3⊗jsPmFBPrm

Сделайте функцию, которая параметром будет принимать строку и возвращать массив ее символов.

№4⊗jsPmFBPrm

Сделайте функцию, которая параметром будет принимать строку и переворачивать ее символы в обратном порядке.

№5⊗jsPmFBPrm

Сделайте функцию, которая параметром будет принимать строку и делать заглавной первую букву этой строки.

№6⊗jsPmFBPrm

Сделайте функцию, которая параметром будет принимать строку и делать заглавной первую букву каждого слова этой строки.

№7⊗jsPmFBPrm

Сделайте функцию, заполняющую массив целыми числами от 1 до заданного.

№8⊗jsPmFBPrm

Сделайте функцию, которая параметром будет принимать число и возвращать сумму его цифр.

№9⊗jsPmFBPrm

Сделайте функцию, которая параметром будет год и проверять, високосный он или нет.

№10⊗jsPmFBPrm

Сделайте функцию, которая параметром будет принимать секунды, а возвращать количество суток, соответствующих этим секундам.

№11⊗jsPmFBPrm

Сделайте функцию, которая будет возвращать случайный элемент из массива.

№12⊗jsPmFBPrm

Сделайте функцию, которая параметром будет принимать число и проверять, простое оно или нет.

---
